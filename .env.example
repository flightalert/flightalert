#The following variables are required

#Host to use for receiver data
#Could be Piaware IP/Domain or ADSB-Ultrafeeder IP/Domain
RECEIVER_HOST=

#ADSB-Ultrafeeder HOST IP/Domain
ULTRAFEEDER_HOST=""

#Notification URLs from Apprise, comma separated list
#https://github.com/caronc/apprise/wiki#notification-services
APPRISE_NOTIFY_URLS=



### OPTIONAL ###
#The following variables are optional

# development / production
APP_ENV=production

#Distance (nautical miles) from receiver a plane needs to be to notify
NOTIFY_DISTANCE=0.5

#Altitude (feet) a plane needs to be under to notify
NOTIFY_ALTITUDE=3000

#Port to use for the receiver
#Could be Piaware web port or ADSB-Ultrafeeder web port
#Note: If you are using a reverse_proxy, leave this empty
RECEIVER_PORT=

#ADSB-Ultrafeeder PORT for incoming flight data
#This is the port for Json position output from ADSB-Ultrafeeder
ULTRAFEEDER_PORT=30047

#If socket connection disconnects, at what interval (in milliseconds) should it try to reconnect
SOCKET_RETRY_INTERVAL=15000

#Number of times it tries to reconnect before failing
SOCKET_MAX_RETRIES=5

#Comma separated list of services to use for retrieving flight source/destination
#flightaware and adsbdb are the only valid services at this time
SERVICES="flightaware"

#Set this to true if you would like to retrieve source/destination for every received message
#This could be costly/time consuming
#When false, services will only be called when notify_distance/notify_altitude above are met
SERVICES_ALWAYS_CHECK="false"

#The Apprise API url to use for sending notifications.
#This can be any path/endpoint defined here: https://github.com/caronc/apprise-api
#By default, this will use the internal apprise service from docker-compose.
#    If you have apprise running separately, you may specify that host here with the path/endpoint.
APPRISE_API_URL="http://apprise:8000/notify"

# DEBUG - Every received message is logged
# INFO  - Only notified messages are logged
# ERROR - Only errors are logged
LOG_LEVEL="INFO"
